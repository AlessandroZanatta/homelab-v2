---
apiVersion: v1
kind: Service
metadata:
  namespace: registry
  name: ui
  labels:
    kalexlab.xyz/app: registry
    kalexlab.xyz/component: ui
spec:
  type: ClusterIP
  ports:
    - name: ui
      port: 8080
      protocol: TCP
  selector:
    kalexlab.xyz/app: registry
    kalexlab.xyz/component: ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: registry
  name: ui
  labels:
    kalexlab.xyz/app: registry
    kalexlab.xyz/component: ui
  annotations:
    keel.sh/policy: force
    keel.sh/force: "true"
    keel.sh/match-tag: "true"
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 6h"
    keel.sh/approvals: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      kalexlab.xyz/app: registry
      kalexlab.xyz/component: ui
  minReadySeconds: 5
  template:
    metadata:
      labels:
        kalexlab.xyz/app: registry
        kalexlab.xyz/component: ui
    spec:
      initContainers:
        - name: copy-nginx
          image: joxit/docker-registry-ui:2
          imagePullPolicy: Always
          securityContext:
            readOnlyRootFilesystem: true

          resources:
            requests:
              memory: 20Mi
              cpu: 5m
            limits:
              memory: 200Mi
              cpu: 100m

          command: [
              "sh",
              "-c",
              "cp -r /etc/nginx/* /mnt/nginx && \
              cp -r /usr/share/nginx/html/* /mnt/nginx-html",
            ]
          volumeMounts:
            - mountPath: /mnt/nginx
              name: nginx
            - mountPath: /mnt/nginx-html
              name: nginx-html
      restartPolicy: Always
      containers:
        - name: ui
          image: joxit/docker-registry-ui:2
          env:
            - name: REGISTRY_TITLE
              value: "kalexlab registry"
            - name: NGINX_PROXY_PASS_URL
              value: "http://registry:5000"
            - name: SINGLE_REGISTRY
              value: "true"
            - name: DELETE_IMAGES
              value: "true"
            - name: REGISTRY_SECURED
              value: "true"

          ports:
            - containerPort: 8080
              protocol: TCP

          resources:
            requests:
              memory: 20Mi
              cpu: 5m
            limits:
              memory: 200Mi
              cpu: 100m

          readinessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            failureThreshold: 3
            periodSeconds: 30

          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - NET_RAW

          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /etc/nginx
              name: nginx
            - mountPath: /var/cache/nginx
              name: nginx-cache
            - mountPath: /usr/share/nginx/html
              name: nginx-html

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

      enableServiceLinks: false
      automountServiceAccountToken: false

      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: nginx
          emptyDir:
            sizeLimit: 1Gi
        - name: nginx-cache
          emptyDir:
            sizeLimit: 1Gi
        - name: nginx-html
          emptyDir:
            sizeLimit: 1Gi
