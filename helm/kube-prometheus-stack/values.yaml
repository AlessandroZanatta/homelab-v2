---
# Default values for kube-prometheus-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Install Prometheus Operator CRDs
##
crds:
  enabled: true

sidecar:
  dashboards:
    enabled: true

grafana:
  enabled: true
  defaultDashboardsTimezone: Europe/Rome

## Deploy a Prometheus instance
##
prometheus:
  enabled: true

  ## Settings affecting prometheusSpec
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#prometheusspec
  ##
  prometheusSpec:
    ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the servicemonitors created
    ##
    serviceMonitorSelectorNilUsesHelmValues: false

    ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the podmonitors created
    ##
    podMonitorSelectorNilUsesHelmValues: false

    ## Prometheus StorageSpec for persistent data
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
    ##
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: prometheus-data-pvc
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

extraManifests:
  - apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      namespace: prometheus
      name: letsencrypt-tls-grafana
    spec:
      secretName: letsencrypt-tls-grafana
      dnsNames:
        - grafana.kalexlab.xyz
      issuerRef:
        group: cert-manager.io
        kind: ClusterIssuer
        name: letsencrypt
  - apiVersion: traefik.io/v1alpha1
    kind: IngressRoute
    metadata:
      namespace: prometheus
      name: grafana-dashboard-ingress
    spec:
      entryPoints:
        - web
        - websecure
      routes:
        - kind: Rule
          match: Host(`grafana.kalexlab.xyz`)
          services:
            - name: prometheus-grafana
              port: 80
      tls:
        secretName: letsencrypt-tls-grafana
