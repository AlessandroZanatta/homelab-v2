---
crds:
  enabled: true
  upgradeJob:
    enabled: true
    # Conflicts with ArgoCD, force it, ArgoCD will fix it later
    forceConflicts: true

sidecar:
  dashboards:
    enabled: true

grafana:
  enabled: true
  defaultDashboardsTimezone: Europe/Rome

prometheusOperator:
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false

prometheus:
  enabled: true

  prometheusSpec:
    ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the servicemonitors created
    serviceMonitorSelectorNilUsesHelmValues: false

    ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the podmonitors created
    podMonitorSelectorNilUsesHelmValues: false

    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: prometheus-data-pvc
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

    thanosService:
      enabled: true

    thanosServiceMonitor:
      enabled: true
