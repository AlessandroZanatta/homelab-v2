---
apiVersion: v1
kind: Service
metadata:
  namespace: media
  name: prowlarr-qbittorrent
  labels:
    kalexlab.xyz/app: media
    kalexlab.xyz/component: prowlarr-qbittorrent
spec:
  type: ClusterIP
  ports:
    - name: qbittorrent
      port: 8080
      protocol: TCP
    - name: qbittorrent-bt-tcp
      port: 6881
      protocol: TCP
    - name: qbittorrent-bt-udp
      port: 6881
      protocol: UDP
    - name: prowlarr
      port: 9696
      protocol: TCP
    - name: flaresolverr
      port: 8191
      protocol: TCP
  selector:
    kalexlab.xyz/app: media
    kalexlab.xyz/component: prowlarr-qbittorrent
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: media
  name: prowlarr-qbittorrent
  labels:
    kalexlab.xyz/app: media
    kalexlab.xyz/component: prowlarr-qbittorrent
  annotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: "Uses lots of directories"
    ignore-check.kube-linter.io/run-as-non-root: "Runs with lower privileges after startup"

    keel.sh/policy: force
    keel.sh/force: "true"
    keel.sh/match-tag: "true"
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 6h"
    keel.sh/approvals: "1"
spec:
  serviceName: prowlarr-qbittorrent
  replicas: 1
  selector:
    matchLabels:
      kalexlab.xyz/app: media
      kalexlab.xyz/component: prowlarr-qbittorrent
  minReadySeconds: 5
  template:
    metadata:
      labels:
        kalexlab.xyz/app: media
        kalexlab.xyz/component: prowlarr-qbittorrent
    spec:
      restartPolicy: Always
      initContainers:
        - name: gluetun
          image: qmcgaw/gluetun:latest
          # native sidecar (https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/)
          restartPolicy: Always

          env:
            - name: DNS_KEEP_NAMESERVER
              value: "on"
            - name: BLOCK_MALICIOUS
              value: "off"
            - name: BLOCK_SURVEILLANCE
              value: "off"
            - name: BLOCK_ADS
              value: "off"
            # - name: FIREWALL
            #   value: "off"
            - name: FIREWALL_INPUT_PORTS
              value: "8080,9696,6881,8191"
            # Bypass tun0 interface for:
            #  - Cluster VPN subnet
            #  - Pods subnet
            #  - Services subnet
            #  - Local subnet
            - name: FIREWALL_OUTBOUND_SUBNETS
              value: "10.8.0.0/16,10.0.0.0/16,10.32.0.0/16,192.168.0.0/16"
            - name: VPN_SERVICE_PROVIDER
              value: "mullvad"
            - name: VPN_TYPE
              value: "wireguard"
            - name: WIREGUARD_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: gluetun-secrets
                  key: WIREGUARD_PRIVATE_KEY
            - name: WIREGUARD_ADDRESSES
              valueFrom:
                secretKeyRef:
                  name: gluetun-secrets
                  key: WIREGUARD_ADDRESSES
            - name: SERVER_COUNTRIES
              valueFrom:
                secretKeyRef:
                  name: gluetun-secrets
                  key: SERVER_COUNTRIES
            - name: SERVER_CITIES
              valueFrom:
                secretKeyRef:
                  name: gluetun-secrets
                  key: SERVER_CITIES
            - name: SERVER_HOSTNAMES
              valueFrom:
                secretKeyRef:
                  name: gluetun-secrets
                  key: SERVER_HOSTNAMES

          # TODO: try stricter permissions, such as runAsUser: 1000
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
              drop:
                - NET_RAW

        - name: flaresolverr
          image: ghcr.io/flaresolverr/flaresolverr:latest
          # native sidecar (https://kubernetes.io/blog/2023/08/25/native-sidecar-containers/)
          restartPolicy: Always

          ports:
            - containerPort: 8191
              protocol: TCP

          readinessProbe:
            httpGet:
              path: /
              port: 8191
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8191
            failureThreshold: 3
            periodSeconds: 30

      containers:
        - name: prowlarr
          image: linuxserver/prowlarr:latest
          imagePullPolicy: Always

          # securityContext:
          #   readOnlyRootFilesystem: true
          #   runAsNonRoot: true
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   allowPrivilegeEscalation: false

          ports:
            - containerPort: 9696
              protocol: TCP

          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "UTC"

          # TODO
          # resources:
          #   requests:
          #     memory: 150Mi
          #     cpu: 20m
          #   limits:
          #     memory: 500Mi
          #     cpu: 1000m

          readinessProbe:
            httpGet:
              path: /
              port: 9696
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 9696
            failureThreshold: 3
            periodSeconds: 30

          securityContext:
            # uses a LOT of directories
            # readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

          volumeMounts:
            - mountPath: /config
              name: prowlarr-conf-pvc

        - name: qbittorrent
          image: linuxserver/qbittorrent:latest
          imagePullPolicy: Always

          # securityContext:
          #   readOnlyRootFilesystem: true
          #   runAsNonRoot: true
          #   runAsUser: 1000
          #   runAsGroup: 1000
          #   allowPrivilegeEscalation: false

          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 6881
              protocol: TCP
            - containerPort: 6881
              protocol: UDP

          env:
            - name: WEBUI_PORT
              value: "8080"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "UTC"

          # TODO
          # resources:
          #   requests:
          #     memory: 150Mi
          #     cpu: 20m
          #   limits:
          #     memory: 500Mi
          #     cpu: 1000m

          readinessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            failureThreshold: 3
            periodSeconds: 30

          securityContext:
            # uses a LOT of directories
            # readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false

          volumeMounts:
            - mountPath: /data/torrents
              name: media-data-pvc
              subPath: torrents
            - mountPath: /config
              name: qbittorrent-conf-pvc

      enableServiceLinks: false
      automountServiceAccountToken: false

      securityContext:
        # Will run with lower privileges after startup anyway
        # runAsNonRoot: true
        # runAsUser: 1000
        # runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

      volumes:
        - name: media-data-pvc
          persistentVolumeClaim:
            claimName: media-data-pvc

  volumeClaimTemplates:
    - metadata:
        name: prowlarr-conf-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 100Mi
    - metadata:
        name: qbittorrent-conf-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 100Mi
