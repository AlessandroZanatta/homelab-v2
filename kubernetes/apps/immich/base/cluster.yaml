---
apiVersion: barmancloud.cnpg.io/v1
kind: ObjectStore
metadata:
  name: backups
  namespace: immich
spec:
  configuration:
    destinationPath: "s3://cnpg/immich"
    endpointURL: "http://minio.backups.svc.cluster.local:9000"
    s3Credentials:
      accessKeyId:
        name: minio-secrets
        key: MINIO_ROOT_USER
      secretAccessKey:
        name: minio-secrets
        key: MINIO_ROOT_PASSWORD
    wal:
      compression: bzip2
    data:
      compression: bzip2
  retentionPolicy: 14d
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cluster
  namespace: immich
spec:
  inheritedMetadata:
    labels:
      kalexlab.xyz/app: immich
      kalexlab.xyz/component: cluster
      kalexlab.xyz/monitoring: "true"

  imageName: "ghcr.io/tensorchord/cloudnative-pgvecto.rs:14-v0.2.0"

  postgresql:
    shared_preload_libraries:
      - "vectors.so"

  instances: 1

  storage:
    storageClass: longhorn
    size: 6Gi

  # Immich requires superuser role to run some
  # "create extensions" and other commands
  managed:
    roles:
      - name: app
        superuser: true
        login: true

  monitoring:
    enablePodMonitor: true

  bootstrap:
    initdb:
      postInitSQL:
        # - ALTER SYSTEM SET search_path TO "$user", public, vectors;
        - SET search_path TO "$user", public, vectors;
        - CREATE EXTENSION IF NOT EXISTS "vectors";
        - ALTER SCHEMA vectors OWNER TO "app";
        - GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA vectors TO "app";
        - GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "app";
        - CREATE EXTENSION IF NOT EXISTS cube WITH SCHEMA pg_catalog;
        - CREATE EXTENSION IF NOT EXISTS earthdistance WITH SCHEMA pg_catalog;

  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        barmanObjectName: backups
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: cluster-backup
  namespace: immich
spec:
  cluster:
    name: cluster
  schedule: "0 0 0 * * *"
  backupOwnerReference: self
  method: plugin
  pluginConfiguration:
    name: barman-cloud.cloudnative-pg.io
