---
apiVersion: v1
kind: Service
metadata:
  namespace: uptime-kuma
  name: uptime-kuma
  labels:
    kalexlab.xyz/app: uptime-kuma
    kalexlab.xyz/component: uptime-kuma
spec:
  type: ClusterIP
  ports:
    - name: uptime-kuma
      port: 3001
      protocol: TCP
      targetPort: 3001
  selector:
    kalexlab.xyz/app: uptime-kuma
    kalexlab.xyz/component: uptime-kuma
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: uptime-kuma
  name: uptime-kuma
  labels:
    kalexlab.xyz/app: uptime-kuma
    kalexlab.xyz/component: uptime-kuma
spec:
  replicas: 1
  serviceName: uptime-kuma
  selector:
    matchLabels:
      kalexlab.xyz/app: uptime-kuma
      kalexlab.xyz/component: uptime-kuma
  minReadySeconds: 5
  template:
    metadata:
      labels:
        kalexlab.xyz/app: uptime-kuma
        kalexlab.xyz/component: uptime-kuma
    spec:
      restartPolicy: Always

      initContainers:
        - name: wait-mariadb
          image: "docker.io/library/alpine:3.17"
          imagePullPolicy: IfNotPresent

          resources:
            requests:
              memory: 30Mi
              cpu: 1m
            limits:
              memory: 300Mi
              cpu: 20m

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true

          command:
            [
              "sh",
              "-c",
              "for i in $(seq 1 300); do nc -zvw1 database 3306 && exit 0 || sleep 3; done; exit 1",
            ]

      containers:
        - name: uptime-kuma
          image: "docker.io/louislam/uptime-kuma:beta-slim-rootless"
          imagePullPolicy: Always

          ports:
            - name: uptime-kuma
              containerPort: 3001
              protocol: TCP

          env:
            - name: DATA_DIR
              value: /data

          livenessProbe:
            httpGet:
              path: /
              port: 3001
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: 3001
            periodSeconds: 10
            failureThreshold: 3

          resources:
            requests:
              memory: 80Mi
              cpu: 5m
            limits:
              memory: 500Mi
              cpu: 500m

          securityContext:
            # Needed to allow ping to work
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: true
            capabilities:
              add:
                - NET_RAW

          volumeMounts:
            - mountPath: /data
              name: uptime-kuma-data-pvc

      enableServiceLinks: false
      automountServiceAccountToken: false

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

  volumeClaimTemplates:
    - metadata:
        name: uptime-kuma-data-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 100Mi
