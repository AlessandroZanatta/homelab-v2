---
- name: Setup Kubernetes apps
  hosts: ansible_controller
  gather_facts: false
  environment:
    # KUBECONFIG: "../../outputs/{{ ansible_environment }}/control-plane/admin.kubeconfig"
  vars:
    k8s_interface: "wg0"

    manifests_path: "templates/manifests"
    keys_path: "../../outputs/{{ ansible_environment }}/pki"

    etcd_group: "etcd"
    etcd_interface: "wg0"
    etcd_client_port: 2379

  pre_tasks:
    - name: Check cluster connection
      shell: "ping -c1 -W1 10.8.2.1"
      register: ping_cluster
      changed_when: false
      failed_when: false
      tags:
        - always

    - name: Join mesh network if needed
      shell: "wg-quick down ../../outputs/{{ ansible_environment }}/wg/apollo/wg0.conf; wg-quick up ../../outputs/{{ ansible_environment }}/wg/apollo/wg0.conf"
      changed_when: false
      when: "ping_cluster.rc != 0"
      become: true
      tags:
        - always

    # - name: Gather information about etcd group nodes
    #   setup:
    #   delegate_to: "{{ item }}"
    #   delegate_facts: true
    #   loop: "{{ groups[etcd_group] }}"
    #   tags:
    #     - always

  tasks:
    - name: Find all files and directories
      find:
        paths: "{{ manifests_path }}"
        recurse: true
      register: found_items
      tags:
        - always

    - name: Register items
      set_fact:
        items: "{{ found_items.files }}"
      tags:
        - always

    - name: Filter files
      set_fact:
        items: "{{ items | select('search', filter) | list }}"
      when: filter is defined
      tags:
        - always

    - name: Sort found items lexicographically
      set_fact:
        items: "{{ items | map(attribute='path') | sort }}"
      tags:
        - always

    - template:
        src: "{{ item }}"
        dest: "/tmp/{{ item.split('/')[-1] }}"
      with_items: "{{ items }}"
      tags:
        - never
        - debug

    - name: Apply manifests
      kubernetes.core.k8s:
        apply: true
        template:
          path: "{{ item }}"
      with_items: "{{ items }}"
      tags:
        - never
        - apply

    - name: Delete manifests
      kubernetes.core.k8s:
        state: absent
        template:
          path: "{{ item }}"
      with_items: "{{ items }}"
      tags:
        - never
        - delete
