---
# Default values for kube-prometheus-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Install Prometheus Operator CRDs
##
crds:
  enabled: true

## Create default rules for monitoring the cluster
##
# defaultRules:
#   create: true
#   rules:
#     alertmanager: true
#     etcd: false
#     configReloaders: true
#     general: true
#     k8sContainerCpuUsageSecondsTotal: true
#     k8sContainerMemoryCache: true
#     k8sContainerMemoryRss: true
#     k8sContainerMemorySwap: true
#     k8sContainerResource: true
#     k8sContainerMemoryWorkingSetBytes: true
#     k8sPodOwner: true
#     kubeApiserverAvailability: true
#     kubeApiserverBurnrate: true
#     kubeApiserverHistogram: true
#     kubeApiserverSlos: true
#     kubeControllerManager: false
#     kubelet: true
#     kubeProxy: false
#     kubePrometheusGeneral: true
#     kubePrometheusNodeRecording: true
#     kubernetesApps: true
#     kubernetesResources: true
#     kubernetesStorage: true
#     kubernetesSystem: true
#     kubeSchedulerAlerting: false
#     kubeSchedulerRecording: false
#     kubeStateMetrics: true
#     network: true
#     node: true
#     nodeExporterAlerting: true
#     nodeExporterRecording: true
#     prometheus: true
#     prometheusOperator: true
#     windows: false
#
# global:
#   rbac:
#     create: true
#
# windowsMonitoring:
#   ## Deploys the windows-exporter and Windows-specific dashboards and rules (job name must be 'windows-exporter')
#   enabled: false

## Component scraping coreDns. Use either this or kubeDns
##
# coreDns:
#   enabled: true
#   service:
#     enabled: true
#     port: 9153
#     targetPort: 9153
#
#     ipDualStack:
#       enabled: false
#       ipFamilies: ["IPv6", "IPv4"]
#       ipFamilyPolicy: "PreferDualStack"
#     # selector:
#     #   k8s-app: kube-dns
#   serviceMonitor:
#     enabled: true

# TODO
## Component scraping etcd
##
# kubeEtcd:
#   enabled: false
#
# ## Component scraping kube scheduler
# ##
# kubeScheduler:
#   enabled: false
#
# ## Component scraping kube proxy
# ##
# kubeProxy:
#   enabled: false
#
# ## Component scraping kube state metrics
# ##
# kubeStateMetrics:
#   enabled: false

sidecar:
  dashboards:
    enabled: true

grafana:
  enabled: true

  defaultDashboardsTimezone: Europe/Rome

  adminPassword: "{{ grafana_admin_password }}"

  ingress:
    ## If true, Grafana Ingress will be created
    ##
    enabled: true

    ## IngressClassName for Grafana Ingress.
    ## Should be provided if Ingress is enable.
    ##
    # ingressClassName: nginx

    ## Annotations for Grafana Ingress
    ##
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "{{ clusterissuer }}"

      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"

    ## Labels to be added to the Ingress
    ##
    labels:
      kalexlab.xyz/app: grafana

    ## Hostnames.
    ## Must be provided if Ingress is enable.
    ##
    # hosts:
    #   - grafana.domain.com
    hosts:
      - grafana.kalexlab.xyz

    ## Path for grafana ingress
    path: /

    ## TLS configuration for grafana Ingress
    ## Secret must be manually created in the namespace
    ##
    tls:
      - hosts:
          - grafana.kalexlab.xyz
        secretName: letsencrypt-tls-grafana

  alerting:
    telegram-cp.yaml:
      apiVersion: 1
      contactPoints:
        - orgId: 1
          name: Telegram contact point
          receivers:
            - uid: bdri5am7bpuype
              type: telegram
              settings:
                bottoken: "{{ grafana_telegram_token }}"
                chatid: "{{ grafana_telegram_chatids }}"
                disable_notification: false
                disable_web_page_preview: false
                protect_content: false
              disableResolveMessage: false

    telegram-notification-policy.yaml:
      apiVersion: 1
      policies:
        - orgId: 1
          receiver: Telegram contact point
          group_by:
            - grafana_folder
            - alertname

    delete-default-mail-cp.yml:
      apiVersion: 1
      deleteContactPoints:
        - orgId: 1
          uid: ""

## Deploy node exporter as a daemonset to all nodes
##
nodeExporter:
  enabled: true
  operatingSystems:
    linux:
      enabled: true
    darwin:
      enabled: false

## Deploy a Prometheus instance
##
prometheus:
  enabled: true

  ## Settings affecting prometheusSpec
  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#prometheusspec
  ##
  prometheusSpec:
    ## If true, a nil or {} value for prometheus.prometheusSpec.serviceMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the servicemonitors created
    ##
    serviceMonitorSelectorNilUsesHelmValues: false

    ## If true, a nil or {} value for prometheus.prometheusSpec.podMonitorSelector will cause the
    ## prometheus resource to be created with selectors based on values in the helm deployment,
    ## which will also match the podmonitors created
    ##
    podMonitorSelectorNilUsesHelmValues: false

    ## Prometheus StorageSpec for persistent data
    ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/user-guides/storage.md
    ##
    storageSpec:
      volumeClaimTemplate:
        metadata:
          name: prometheus-data-pvc
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
