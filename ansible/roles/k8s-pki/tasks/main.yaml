---
- name: Gather info about nodes
  setup:
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups[k8s_workers_group] | union(groups[k8s_controllers_groups]) | union(groups[k8s_etcd_group]) }}"

# https://github.com/githubixx/ansible-role-kubernetes-ca/blob/ea24283ed977b5b1945dc2f518c57cea7ec98ecc/tasks/main.yaml#L10
- name: Set kubernetes api server cert hosts
  set_fact:
    k8s_pki_api_hosts: >-
      {% set comma = joiner(",") %}{% for item in groups[k8s_controllers_groups] -%}
        {{ comma() }}{{ hostvars[item].ansible_default_ipv4.address }}{{ comma() }}{{ hostvars[item]["ansible_" + k8s_interface].ipv4.address }}{{ comma() }}{{ item }}{{ comma() }}{{ hostvars[item]["ansible_hostname"] }}.{{ k8s_domain }}
      {%- endfor %}{% for item in k8s_pki_api_server_cert_hosts -%}
        {{ comma() }}{{ item }}
      {%- endfor %}

- name: Generate list of IP addresses and hostnames needed for etcd certificate
  set_fact:
    k8s_pki_etcd_hosts: >-
      {% set comma = joiner(",") %}{% for item in groups[k8s_etcd_group] -%}
        {{ comma() }}{{ hostvars[item].ansible_default_ipv4.address }}{{ comma() }}{{ hostvars[item]["ansible_" + k8s_interface].ipv4.address }}{{ comma() }}{{ item }}{{ comma() }}{{ hostvars[item]["ansible_hostname"] }}.{{ k8s_domain }}
      {%- endfor %}{% for item in k8s_pki_etcd_cert_hosts -%}
        {{ comma() }}{{ item }}
      {%- endfor %}

- name: Ensure k8s_pki_output_folder exists
  file:
    path: "{{ k8s_pki_path }}"
    state: directory
    mode: "{{ k8s_pki_path_mode }}"

- name: Instantiate certificate authority configs
  template:
    src: "../templates/{{ item }}.json.j2"
    dest: "{{ k8s_pki_path }}/{{ item }}.json"
    mode: "{{ k8s_pki_certificates_mode }}"
  loop:
    - ca-apiserver-config
    - ca-etcd-config

- name: Generate certificate authority CSR
  template:
    src: generic-csr.json.j2
    dest: "{{ k8s_pki_path }}/{{ item.ca }}-csr.json"
    mode: "{{ k8s_pki_certificates_mode }}"
  with_items: "{{ k8s_pki_ca }}"
  vars:
    cn: "{{ item.cn }}"
    o: "{{ item.o }}"

- name: Generate certificate authority certificate
  shell: cfssl gencert -initca {{ item }}-csr.json | cfssljson -bare {{ item }}
  args:
    chdir: "{{ k8s_pki_path }}"
    creates: "{{ item }}-key.pem"
  loop:
    - ca-apiserver
    - ca-etcd

- name: Set permissions for certificate authority certificate
  file:
    path: "{{ k8s_pki_path }}/{{ item }}"
    mode: "{{ k8s_pki_certificates_mode }}"
  loop:
    - ca-apiserver-key.pem
    - ca-apiserver.pem
    - ca-etcd-key.pem
    - ca-etcd.pem

- name: Generate kubelet certificates
  include_tasks: kubelet.yaml
  with_inventory_hostnames: "{{ k8s_workers_group }}"
  loop_control:
    loop_var: host

- name: Generate certificate for apiserver certificate
  include_tasks: gen_cert.yaml
  loop:
    - cert: generic
      cert_out: apiserver
      cn: "{{ k8s_pki_api_server_cn }}"
      o: "{{ k8s_pki_api_server_o }}"
      extra_flags: "-hostname={{ k8s_pki_api_hosts }}"
  vars:
    ca: ca-apiserver
    profile: kubernetes

- name: Generate other certificates
  include_tasks: gen_cert.yaml
  with_items: "{{ k8s_pki_apiserver_certificates + k8s_pki_extra_apiserver_certificates }}"
  vars:
    ca: ca-apiserver
    profile: kubernetes

- name: Generate etcd certificates
  include_tasks: gen_cert.yaml
  loop:
    - cert: generic
      cert_out: etcd-server
      cn: "etcd-server"
      o: "Kubernetes"
      profile: server
      extra_flags: "-hostname={{ k8s_pki_etcd_hosts }}"
    - cert: generic
      cert_out: etcd-peer
      cn: "etcd-peer"
      o: "Kubernetes"
      profile: peer
      extra_flags: "-hostname={{ k8s_pki_etcd_hosts }}"
  vars:
    ca: ca-etcd

- name: Generate client etcd certificats
  include_tasks: gen_cert.yaml
  with_items: "{{ k8s_pki_etcd_clients + k8s_pki_extra_etcd_clients }}"
  vars:
    ca: ca-etcd
    profile: client
