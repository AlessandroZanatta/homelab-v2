---
- name: Check architecture is supported
  fail:
    msg: "Architecture {{ ansible_architecture }} is not supported!"
  when:
    - ansible_architecture != 'x86_64'
    - ansible_architecture != 'arm64'
    - ansible_architecture != 'aarch64'

- name: Decide download based on architecture
  set_fact:
    containerd_archive: "{% if ansible_architecture == 'x86_64' %}{{ containerd_archive_amd64 }}{% else %}{{ containerd_archive_arm64 }}{% endif %}"

- name: Create directory for containerd configuration file
  file:
    path: "{{ containerd_conf_path }}"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Create containerd temporary directory
  tempfile:
    state: directory
  register: containerd_tmpdir
  changed_when: false

- name: Downloading containerd archive
  get_url:
    url: "{{ containerd_archive.url }}"
    dest: "{{ containerd_tmpdir.path }}/{{ containerd_archive.dest }}"
    checksum: "sha256:{{ containerd_archive.checksum }}"
    mode: 0600

- name: Unarchive containerd
  unarchive:
    src: "{{ containerd_tmpdir.path }}/{{ containerd_archive.dest }}"
    dest: "{{ binaries_path }}"
    mode: "{{ binaries_mode }}"
    remote_src: true
    extra_opts:
      - --strip-components=1
  notify:
    - restart containerd

- name: Create containerd configuration file
  copy:
    content: "{{ containerd_config }}"
    dest: "{{ containerd_conf_path }}/config.toml"
    owner: root
    group: root
    mode: 0644
  notify:
    - restart containerd

- name: Create containerd.service systemd file
  template:
    src: containerd.service.j2
    dest: /etc/systemd/system/containerd.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart containerd

- name: Flush handlers
  meta: flush_handlers

- name: Enable containerd
  service:
    name: containerd
    enabled: true
