---
###########################################
# Certificates path on ansible controller #
###########################################
k8s_pki_path: "./build"

######################
# etcd ansible group #
######################
k8s_etcd_ansible_group: "etcd"

#################
# etcd run user #
#################
k8s_etcd_user: "etcd"
k8s_etcd_group: "etcd"
k8s_etcd_user_system: true
k8s_etcd_user_shell: "/bin/false"

#######################
# General etcd config #
#######################
k8s_interface: "wg0"
k8s_etcd_client_port: "2379"
k8s_etcd_peer_port: "2380"
k8s_etcd_metric_port: "2381"

####################
# etcd directories #
####################

# Configuration path
k8s_etcd_conf_dir: "/etc/etcd"
k8s_etcd_conf_dir_mode: "0750"
k8s_etcd_conf_dir_user: "root"
k8s_etcd_conf_dir_group: "{{ k8s_etcd_group }}"

# Data path
k8s_etcd_data_dir: "/srv/etcd"
k8s_etcd_data_dir_mode: "0700"
k8s_etcd_data_dir_user: "{{ k8s_etcd_user }}"
k8s_etcd_data_dir_group: "{{ k8s_etcd_group }}"

# Certificates and keys path
k8s_etcd_certs_mode: "0440"
k8s_etcd_certs_user: "root"
k8s_etcd_certs_group: "{{ k8s_etcd_group }}"

#################################
# Certificates required by etcd #
#################################
k8s_etcd_certs:
  - ca-etcd.pem
  - ca-etcd-key.pem
  - etcd-server.pem
  - etcd-server-key.pem
  - etcd-peer.pem
  - etcd-peer-key.pem

#############################
# etcd systemd unit options #
#############################

# Borrowed from https://github.com/githubixx/ansible-role-etcd/blob/master/defaults/main.yaml
etcd_service_options:
  - User={{ k8s_etcd_user }}
  - Group={{ k8s_etcd_group }}
  - Restart=on-failure
  - RestartSec=5
  - Type=notify
  - ProtectHome=true
  - PrivateTmp=true
  - ProtectSystem=full
  - ProtectKernelModules=true
  - ProtectKernelTunables=true
  - ProtectControlGroups=true
  - CapabilityBoundingSet=~CAP_SYS_PTRACE

##############
# etcd flags #
##############
etcd_settings:
  name: "{{ ansible_hostname }}"
  cert-file: "{{ k8s_etcd_conf_dir }}/etcd-server.pem"
  key-file: "{{ k8s_etcd_conf_dir }}/etcd-server-key.pem"
  trusted-ca-file: "{{ k8s_etcd_conf_dir }}/ca-etcd.pem"
  peer-cert-file: "{{ k8s_etcd_conf_dir }}/etcd-peer.pem"
  peer-key-file: "{{ k8s_etcd_conf_dir }}/etcd-peer-key.pem"
  peer-trusted-ca-file: "{{ k8s_etcd_conf_dir }}/ca-etcd.pem"
  advertise-client-urls: "{{ 'https://' + hostvars[inventory_hostname]['ansible_' + k8s_interface].ipv4.address + ':' + k8s_etcd_client_port }}"
  initial-advertise-peer-urls: "{{ 'https://' + hostvars[inventory_hostname]['ansible_' + k8s_interface].ipv4.address + ':' + k8s_etcd_peer_port }}"
  listen-peer-urls: "{{ 'https://' + hostvars[inventory_hostname]['ansible_' + k8s_interface].ipv4.address + ':' + k8s_etcd_peer_port }}"
  listen-client-urls: "{{ 'https://' + hostvars[inventory_hostname]['ansible_' + k8s_interface].ipv4.address + ':' + k8s_etcd_client_port + ',https://127.0.0.1:' + k8s_etcd_client_port }}"
  peer-client-cert-auth: "true" # Enable peer client cert authentication
  client-cert-auth: "true" # Enable client cert authentication
  initial-cluster-token: "etcd-cluster-0" # Initial cluster token for the etcd cluster during bootstrap.
  initial-cluster-state: "new" # Initial cluster state ('new' or 'existing')
  data-dir: "{{ k8s_etcd_data_dir }}" # etcd data directory (etcd database files so to say)
  wal-dir: "" # Dedicated wal directory ("" means no separated WAL directory)
  auto-compaction-retention: "0" # Auto compaction retention in hour. 0 means disable auto compaction.
  snapshot-count: "100000" # Number of committed transactions to trigger a snapshot to disk
  heartbeat-interval: "100" # Time (in milliseconds) of a heartbeat interval
  election-timeout: "1000" # Time (in milliseconds) for an election to timeout. See tuning documentation for details
  max-snapshots: "5" # Maximum number of snapshot files to retain (0 is unlimited)
  max-wals: "5" # Maximum number of wal files to retain (0 is unlimited)
  quota-backend-bytes: "0" # Raise alarms when backend size exceeds the given quota (0 defaults to low space quota)
  logger: "zap" # Specify ‘zap’ for structured logging or ‘capnslog’.
  log-outputs: "systemd/journal" # Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd
  enable-v2: "true" # enable v2 API to stay compatible with previous etcd 3.3.x (needed for flannel e.g.)
